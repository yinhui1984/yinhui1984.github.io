<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>solidity - Tag - YINHUI&#39;s BLOG</title>
        <link>https://yinhui1984.github.io/tags/solidity/</link>
        <description>solidity - Tag - YINHUI&#39;s BLOG</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 19 Jan 2023 20:06:53 &#43;0800</lastBuildDate><atom:link href="https://yinhui1984.github.io/tags/solidity/" rel="self" type="application/rss+xml" /><item>
    <title>Ethernaut 19 MagicNumber</title>
    <link>https://yinhui1984.github.io/ethernaut_19_magicnumber/</link>
    <pubDate>Thu, 19 Jan 2023 20:06:53 &#43;0800</pubDate>
    <author>yinhui</author>
    <guid>https://yinhui1984.github.io/ethernaut_19_magicnumber/</guid>
    <description><![CDATA[<h1 id="19-magic-number">19 Magic Number</h1>
<p>ethernaut 挑战 第19题, 比较有意思, 记录一下</p>]]></description>
</item>
<item>
    <title>Solidity中tx.origin和msg.sender</title>
    <link>https://yinhui1984.github.io/solidity_tx_origin_msg_sender/</link>
    <pubDate>Tue, 06 Dec 2022 13:21:41 &#43;0800</pubDate>
    <author>yinhui</author>
    <guid>https://yinhui1984.github.io/solidity_tx_origin_msg_sender/</guid>
    <description><![CDATA[基本含义: tx.origin: tx.origin 表示交易的发起者,这个值在执行交易时自动设置，用于表示这个交易是由哪个账户发起的. 使用 tx.origin 的原因是，在以太坊区块链中，交易可能会]]></description>
</item>
<item>
    <title>Solidity中的fallback和receive函数</title>
    <link>https://yinhui1984.github.io/solidity_fallback_receive_function/</link>
    <pubDate>Wed, 30 Nov 2022 09:25:29 &#43;0800</pubDate>
    <author>yinhui</author>
    <guid>https://yinhui1984.github.io/solidity_fallback_receive_function/</guid>
    <description><![CDATA[Receiver 1 2 3 receive() external payable { //... } 基本作用 让合约地址可以以纯转账的方式接收以太, 直接当向合约地址发送以太的时候, receive函数将被调用 比如: 1 2 3 4 5]]></description>
</item>
<item>
    <title>[Solidity by Example]Ex002FirstApplication</title>
    <link>https://yinhui1984.github.io/solidity-by-exampleex002firstapplication/</link>
    <pubDate>Wed, 10 Aug 2022 14:14:38 &#43;0800</pubDate>
    <author>yinhui</author>
    <guid>https://yinhui1984.github.io/solidity-by-exampleex002firstapplication/</guid>
    <description><![CDATA[<p><a href="https://solidity-by-example.org" target="_blank" rel="noopener noreffer ">https://solidity-by-example.org</a> 中的第二个练习, 并添加了注释</p>]]></description>
</item>
<item>
    <title>[Solidity by Example]Ex001HelloWorld</title>
    <link>https://yinhui1984.github.io/solidity-by-exampleex001helloworld/</link>
    <pubDate>Wed, 10 Aug 2022 08:44:36 &#43;0800</pubDate>
    <author>yinhui</author>
    <guid>https://yinhui1984.github.io/solidity-by-exampleex001helloworld/</guid>
    <description><![CDATA[<p><a href="https://solidity-by-example.org" target="_blank" rel="noopener noreffer ">https://solidity-by-example.org</a> 中的第一个练习, 并添加了注释</p>]]></description>
</item>
<item>
    <title>从零开始编写智能合约-手工打造</title>
    <link>https://yinhui1984.github.io/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%BC%96%E5%86%99%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-%E6%89%8B%E5%B7%A5%E6%89%93%E9%80%A0/</link>
    <pubDate>Fri, 01 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>yinhui</author>
    <guid>https://yinhui1984.github.io/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%BC%96%E5%86%99%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-%E6%89%8B%E5%B7%A5%E6%89%93%E9%80%A0/</guid>
    <description><![CDATA[<p>前面在 <a href="https://yinhui1984.github.io/%e4%bb%8e%e9%9b%b6%e5%bc%80%e5%a7%8b%e7%bc%96%e5%86%99%e6%99%ba%e8%83%bd%e5%90%88%e7%ba%a6-%e4%bd%bf%e7%94%a8traffle%e5%a5%97%e4%bb%b6/" target="_blank" rel="noopener noreffer ">从零开始编写智能合约-使用traffle套件</a> 中 使用 <code>truffle</code>套件从零开始搭建环境, 编写、部署、测试和调用智能合约, 这次我们只使用一些命令行工具来进行&quot;手工打造&quot;</p>
<p>配套代码: <a href="https://github.com/yinhui1984/stepByStepSmartContract" target="_blank" rel="noopener noreffer ">https://github.com/yinhui1984/stepByStepSmartContract</a></p>]]></description>
</item>
<item>
    <title>从零开始编写智能合约-使用trtffle套件</title>
    <link>https://yinhui1984.github.io/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%BC%96%E5%86%99%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-%E4%BD%BF%E7%94%A8truffle%E5%A5%97%E4%BB%B6/</link>
    <pubDate>Wed, 29 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>yinhui</author>
    <guid>https://yinhui1984.github.io/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%BC%96%E5%86%99%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-%E4%BD%BF%E7%94%A8truffle%E5%A5%97%E4%BB%B6/</guid>
    <description><![CDATA[<p>这篇文章将带你使用truffle套件从零开始搭建环境, 编写、部署、测试和调用智能合约。</p>
<p>配套代码在 <a href="https://github.com/yinhui1984/HelloTruffle" target="_blank" rel="noopener noreffer ">https://github.com/yinhui1984/HelloTruffle</a></p>]]></description>
</item>
</channel>
</rss>
